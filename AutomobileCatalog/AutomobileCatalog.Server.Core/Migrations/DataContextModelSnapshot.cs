// <auto-generated />
using System;
using AutomobileCatalog.Server.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomobileCatalog.Server.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Alfa Romeo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Alphina"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Acura"
                        });
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleColorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.HasIndex("VehicleColorId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MakeId = 2,
                            Name = "e220",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 2,
                            MakeId = 1,
                            Name = "e39",
                            VehicleColorId = 2
                        },
                        new
                        {
                            Id = 3,
                            MakeId = 2,
                            Name = "190",
                            VehicleColorId = 2
                        },
                        new
                        {
                            Id = 4,
                            MakeId = 2,
                            Name = "230 Pullman",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 5,
                            MakeId = 2,
                            Name = "A-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 6,
                            MakeId = 2,
                            Name = "AMG GT",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 7,
                            MakeId = 2,
                            Name = "AMG GT 4-Door Coupe",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 8,
                            MakeId = 2,
                            Name = "B-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 9,
                            MakeId = 2,
                            Name = "C-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 10,
                            MakeId = 2,
                            Name = "C-Class All-Terrain",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 11,
                            MakeId = 2,
                            Name = "Citan",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 12,
                            MakeId = 2,
                            Name = "CL-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 13,
                            MakeId = 2,
                            Name = "CLA-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 14,
                            MakeId = 2,
                            Name = "CLC-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 15,
                            MakeId = 2,
                            Name = "CLK-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 16,
                            MakeId = 2,
                            Name = "CLS-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 17,
                            MakeId = 2,
                            Name = "G-Class",
                            VehicleColorId = 1
                        },
                        new
                        {
                            Id = 18,
                            MakeId = 3,
                            Name = "Camry",
                            VehicleColorId = 1
                        });
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InitialPriceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InitialPriceDate = new DateTime(2023, 3, 2, 16, 0, 26, 406, DateTimeKind.Local).AddTicks(3762),
                            Value = 19000m,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            InitialPriceDate = new DateTime(2023, 3, 2, 16, 0, 26, 406, DateTimeKind.Local).AddTicks(3812),
                            Value = 15000m,
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineCapacity")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The best car",
                            EngineCapacity = 2.0,
                            PriceId = 1,
                            VehicleModelId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Test description",
                            EngineCapacity = 1.6000000000000001,
                            PriceId = 2,
                            VehicleModelId = 2
                        });
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.VehicleColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Чорний"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Білий"
                        });
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Model", b =>
                {
                    b.HasOne("AutomobileCatalog.Server.Core.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomobileCatalog.Server.Core.VehicleColor", "VehicleColor")
                        .WithMany("Models")
                        .HasForeignKey("VehicleColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");

                    b.Navigation("VehicleColor");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Price", b =>
                {
                    b.HasOne("AutomobileCatalog.Server.Core.Vehicle", "Vehicle")
                        .WithMany("Price")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Vehicle", b =>
                {
                    b.HasOne("AutomobileCatalog.Server.Core.Model", "VehicleModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Make", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.Vehicle", b =>
                {
                    b.Navigation("Price");
                });

            modelBuilder.Entity("AutomobileCatalog.Server.Core.VehicleColor", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
